
    #
    # codelet to build segments
    #
    # based on Vincent Koppelmans
    #
    
    # check to see if the number of cores has been specified.

    if [ -z "${ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS}" ]
    then
       export ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS=1
    fi

    DATE=`date`

    CLASSNUM=${antsPN}

    # Apply registration
    DATE=`date`
    STEPNO=$(( ${STEPNO} + 1))
    STEPNOF=`printf "%02d" ${STEPNO}`
    echo
    echo "${DATE} step ${STEPNOF} antsApplyTransforms * * * * * * * * * * * * * *"
    echo 
    echo "    for i in {1..${CLASSNUM}}
    echo "    do
    echo "       antsApplyTransforms \\ "
    echo "         -d 3 \\ "
    echo "         -i ${ANTSPRIOR}/p${i}.nii.gz \\ "
    echo "         -r ${antsMI} \\ "
    echo "         -o wp${i}.nii.gz \\ "
    echo "         -t ${antsP}_1InverseWarp.nii.gz \\ "
    echo "         -t [${antsP}_0GenericAffine.mat,1] \\ "
    echo "         --float \\ "
    echo "         -v 1 "
    echo "    done"
    echo

    for i in {1..${CLASSNUM}}
    do
       antsApplyTransforms \
         -d 3 \
         -i ${ANTSPRIOR}/p${i}.nii.gz \
         -r ${antsMI} \
         -o wp${i}.nii.gz \
         -t ${antsP}1InverseWarp.nii.gz \
         -t [${antsP}0GenericAffine.mat,1] \
         --float \
         -v 1 
    done

    export FSLOUTPUTTYPETMP=${FSLOUTPUTTYPE}
    export FSLOUTPUTTYPE=NIFTI_GZ
    export FSLOUTPUTTYPE=${FSLOUTPUTTYPETMP}

    if [ "${SKULLSTRIP}" == TRUE ]
    then
       MASK4ATROPOS=${antsMSS}_BrainExtractionMask_dilM${antsDF}.nii.gz
    else
       MASK4ATROPOS=${antsMSS}_BrainExtractionMask_dilM4.nii.gz
    fi
       
    # Run atropos
    DATE=`date`
    STEPNO=$(( ${STEPNO} + 1))
    STEPNOF=`printf "%02d" ${STEPNO}`
    echo
    echo "${DATE} step ${STEPNOF} antsAtroposN4 * * * * * * * * * * * * * *"
    echo 
    echo "    antsAtroposN4.sh \\ "
    echo "          -d 3 \\ "
    echo "          -a \"${antsMI}\" \\ "
    echo "          -x ${MASK4ATROPOS} \\ "
    echo "          -c ${CLASSNUM} \\ "
    echo "          -p wp%d.nii.gz \\ "
    echo "          -o `pwd`/  "
    echo

    antsAtroposN4.sh \
          -d 3 \
          -a "${antsMI}" \
          -x ${MASK4ATROPOS} \
          -c ${CLASSNUM} \
          -p wp%d.nii.gz \
          -o `pwd`/

    # Restrict segmentations to brain mask
    # Mask out
    DATE=`date`
    STEPNO=$(( ${STEPNO} + 1))
    STEPNOF=`printf "%02d" ${STEPNO}`
    echo
    echo "${DATE} step ${STEPNOF} antsBrainExtraction * * * * * * * * * * * * * *"
    echo 
    echo "    for i in `seq 1 ${CLASSNUM}` "
    echo "    do "
    echo "       fslmaths \\ "
    echo "         SegmentationPosteriors${i}.nii.gz \\ "
    echo "         -mas \"ss_${HIRESNAME}_BrainExtractionMask.nii.gz\" \\ "
    echo "         native_p${i}.nii.gz "
    echo "    done"
    echo

    export FSLOUTPUTTYPETMP=${FSLOUTPUTTYPE}
    export FSLOUTPUTTYPE=NIFTI_GZ
    for i in `seq 1 ${CLASSNUM}`
    do
       # Mask out
       fslmaths \
         SegmentationPosteriors${i}.nii.gz \
         -mas "ss_${HIRESNAME}_BrainExtractionMask.nii.gz" \
         native_p${i}.nii.gz
    done
    export FSLOUTPUTTYPE=${FSLOUTPUTTYPETMP}

    # create the CSF and WM masks now.
    # this is dependent on whether they use the SPM
    # or the OASIS templates! 
    
    export FSLOUTPUTTYPETMP=${FSLOUTPUTTYPE}
    export FSLOUTPUTTYPE=NIFTI

    # initialize the CSF
    fslmaths native_p1.nii.gz -mul 0 native_CSF.nii
    for iCSF in ${ANTSCSF}
    do
       fslmaths native_CSF.nii -add native_p${CSF}.nii.gz native_CSF.nii 
    done

    # initialize the WM
    fslmaths native_p1.nii.gz -mul 0 native_WM.nii
    for iWM in ${ANTSWM}
    do
       fslmaths native_WM.nii -add native_p${WM}.nii.gz native_WM.nii 
    done

    export FSLOUTPUTTYPE=${FSLOUTPUTTYPETMP}

    # need to warp the native_p* to get into MNI space and specify a space-defining template (e.g. 2mm)

    # Restrict labeled image to brain mask
    DATE=`date`
    STEPNO=$(( ${STEPNO} + 1))
    STEPNOF=`printf "%02d" ${STEPNO}`
    echo
    echo "${DATE} step ${STEPNOF} fslmaths * * * * * * * * * * * * * *"
    echo 
    echo "    fslmaths \\ "
    echo "      Segmentation.nii.gz \\ "
    echo "      -mas \"ss_${HIRESNAME}_BrainExtractionMask.nii.gz\" \\ "
    echo "      labels.nii.gz"

    export FSLOUTPUTTYPETMP=${FSLOUTPUTTYPE}
    export FSLOUTPUTTYPE=NIFTI_GZ
    fslmaths \
      Segmentation.nii.gz \
      -mas "ss_${HIRESNAME}_BrainExtractionMask.nii.gz" \
      labels.nii.gz          
    export FSLOUTPUTTYPE=${FSLOUTPUTTYPETMP}

    #
    # all done with codelet
    # 
